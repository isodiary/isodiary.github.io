<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>23.5.17</title>
    <url>/2023/05/17/23-5-17/</url>
    <content><![CDATA[<p>计划学完计算机操作系统的io管理,硬盘,还有进程的同步互斥,各种算法,先这样,四级英语还没开始背了</p>
]]></content>
      <tags>
        <tag>23.5</tag>
      </tags>
  </entry>
  <entry>
    <title>23.5.31</title>
    <url>/2023/05/31/23-5-31/</url>
    <content><![CDATA[<pre><code>复习一下小林coding的图解操作系统
</code></pre>
<p>#硬件结构</p>
<p>##CPU如何执行程序</p>
<pre><code>    图灵机
            [纸带]
            [读写头]
                    &#123;存储单元,控制单元,运算单元&#125;
    冯诺依曼模型
            [运算器],[存储器],[控制器],[输入设备],[输出设备](总线相连)


    CPU [通用寄存器], [程序计数器], [指令寄存器]
            CPU位宽 (cpu一次可以运算的运算量)
    总线 [地址总线],  [数据总线], [控制总线]
         指定内存地址  传输数据    控制读or写

         - 串行传输

         - 并行传输
            [线路位宽]
    (CPU位宽最好不要小于线路位宽)

    指令执行过程   从PC得到程序初始地址-&gt;CU控制地址总线通知内存准备数据进行读写-&gt;通过数据总线传输-&gt;存入指令寄存器-&gt;PC自增(也可以自减通过direction flag控制)-&gt;解析指令寄存器中指令交给CU,AU执行

    MIPS指令(32位)
    R指令,I指令,J指令

    指令周期分为:
            Fetch(取指)-&gt;Decode(译指)-&gt;Execution(执行)-&gt;Store(回写)
            (4个阶段)
    指令类型
            [数据传输指令]
            [运算类型指令]
            [跳转类型指令]
            [信号类型指令]
            [闲置类型指令]
    程序执行速度
            指令数

            CPI

            时钟周期时间


    64位比32位CPU优势在哪?计算性能一定比32高吗?
    64位CPU在计算64位数时运算速度会明向快于32位,但运算32位时运算速度提升不大,同时由于CPU位数通常大于等于线路位宽,64位比32位支持更大的内存空间,寻址能力更强(一般64位CPU位宽对应的是4&#125;8位线路位宽,因为多了也用不到)
    软件32位和64位区别,32位程序可以运行在64位电脑吗,反之呢?
    软件位数实际指指令长度为64还是32,以操作系统也是一种软件,32位软件可以在64位机上通过一些兼容方式运行,而反之很难,32位寄存器存不下64位指令,实现过于复杂,通常不支持
</code></pre>
]]></content>
      <tags>
        <tag>23.5</tag>
      </tags>
  </entry>
  <entry>
    <title>第一天.md</title>
    <url>/2023/05/16/%E7%AC%AC%E4%B8%80%E5%A4%A9/</url>
    <content><![CDATA[<p>去码头整点薯条</p>
]]></content>
      <tags>
        <tag>2023.5</tag>
      </tags>
  </entry>
</search>
